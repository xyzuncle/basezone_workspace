spring.profiles.active=dev

spring.application.name=api-gateway
server.port=8085
#这里没有URL的超时，所以注释掉
#zuul.host.socket-timeout-millis=60000
#zuul.host.connect-timeout-millis=10000

#设置多少时间间隔去拉取服务端注册的信息，默认30S，这里设置5秒
eureka.client.registry-fetch-interval-seconds=5
#服务续约间隔时间,服务续约间隔时间默认30s
eureka.instance.lease-renewal-interval-in-seconds=5
#服务续约到期时间，默认90s
eureka.instance.lease-expiration-duration-in-seconds=10


#zuul整合ribbon处理时间
ribbon.ReadTimeout=600000
#zuul整合ribbon的链接时间
ribbon.ConnectTimeout=90000
#解决服务重启后的第一错误
#ribbon.eager-load.enabled=true
#对当前实例的重试次数，3次过后直接报错
ribbon.maxAutoRetries=3
#切换实例重试的次数
ribbon.MaxAutoRetriesNextServer=2

#关闭重试
#zuul.retryable=false
#设置熔断的超时时间开启 false关闭熔断功能，true开启熔断功能
hystrix.command.default.execution.timeout.enabled=true
#设置最大容错超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 90000
#以IP的形式注册实例
eureka.instance.instance-id= ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
#以IP方式访问资源
eureka.instance.prefer-ip-address=true






#测试忽略前缀
zuul.prefix=
#zuul.strip-prefix=true
#路由配置
#zuul.routes.hello-service.path=/hello/**
#zuul.routes.hello-service.serviceId=hello-service



#用户中心
zuul.routes.uc.path=/uc/**
zuul.routes.uc.serviceId=UC-SERVICE
zuul.routes.uc.sensitiveHeaders=
zuul.routes.uc.customSensitiveHeaders=true

#订单服务
zuul.routes.order.path=/order/**
zuul.routes.order.serviceId=order-service
zuul.routes.order.sensitiveHeaders=
zuul.routes.order.customSensitiveHeaders=true

#权限
zuul.routes.admin.path=/pmsn/**
zuul.routes.admin.serviceId=perimission
zuul.routes.admin.sensitiveHeaders=
zuul.routes.admin.customSensitiveHeaders=true




#配置认证中心
zuul.routes.uaa.path=/uaa/**
zuul.routes.uaa.serviceId=oauth-server
zuul.routes.uaa.customSensitiveHeaders=true
#不需要过滤敏感信息
zuul.routes.uaa.sensitiveHeaders=

#产品服务
zuul.routes.product.path=/big/**
zuul.routes.product.serviceId=kongJservice
zuul.routes.product.customSensitiveHeaders=true
#不需要过滤敏感信息
zuul.routes.product.sensitiveHeaders=

#元数据服务
zuul.routes.meta.path=/meta/**
zuul.routes.meta.serviceId=metadataservice
zuul.routes.meta.customSensitiveHeaders=true
#不需要过滤敏感信息
zuul.routes.meta.sensitiveHeaders=

#新闻模块和用户类型模块
zuul.routes.news.path=/news/**
zuul.routes.news.serviceId=newsmodule
zuul.routes.news.customSensitiveHeaders=true
#不需要过滤敏感信息
zuul.routes.news.sensitiveHeaders=

#读取swift盘阵的服务映射
zuul.routes.swift.path=/imgs/**
zuul.routes.swift.serviceId=SwiftImage
zuul.routes.swift.customSensitiveHeaders=true
#不需要过滤敏感信息
zuul.routes.swift.sensitiveHeaders=






#在security 需要使用头部信息，传递到下游
zuul.ignore-security-headers=false
#添加代理头
zuul.add-proxy-headers=true
#解决映射重定向问题
zuul.add-host-header=true

#zuul.routes.hello-service.stripPrefix=false

#查看日志输出
logging.level.com.netflix=debug

#zuul.routes.feign.path=/feign/**
#zuul.routes.feign.serviceId=feign-consumer

#注册中心
#eureka.client.service-Url.defaultZone=http://192.168.101.82:8081/eureka/,http://192.168.101.82:8082/eureka/

#认证被忽略的拦截路径
jwt.ignore-url=/uaa/loginToken,/uaa/cuslogout,/static,/swagger-resources,\
/meta/api/metadatas/all/citycode,/meta/api/metadatas/records/Coverage,/meta/api/metadatas/records/box,/meta/api/metadatas/records/size,\
/meta/api/metadatas/area/geom,/meta/api/metadatas/citys,/meta/api/metadatas/countys,\
/meta/api/metadatas/fields,/meta/api/metadatas/geom/sample,/meta/api/metadatas/global/citycode,\
/meta/api/metadatas/global/provinces,/meta/api/metadatas/provinces,/meta/api/metadatas/query/action,\
/meta/api/metadatas/record/detail,\
/meta/api/metadatas/satelliteInfo,\
/meta/api/metadatas/satellites,\
/pmsn/v2,/uaa/v2,/pmsn/baseMenu/fontMenuByGuest,/order/v2,\
/big/kongji/v2,/meta/v2,/news/v2,/news/zywxNews/qshow.do,\
/news/zywxNews/query.do,/news/zywxNews/queryById.do,\
/big/kongji/api/dataconfig/recentdata,/big/kongji/api/home/latestdata,/big/kongji/api/home/searchorder,\
/pmsn/baseUser/save.do,/pmsn/baseUser/exist,/pmsn/baseUser/existemail,/pmsn/baseUser/sendmail,\
/pmsn/baseUser/resetpwd,/news/sysDictionaries/list.do,\
/big/kongji/api/metadatas/searchBox,/big/kongji/api/metadatas/rates,\
/pmsn/userSearch/query.do,/big/kongji/api/user/save,/big/kongji/api/metadatas/hotdata,/provider/\
,/big/kongji/api/metadatas/satellites,/big/kongji/api/dataconfig/allchilds,\
/big/kongji/api/metadatas/counts,/imgs,/uaa/invalidSessionAction,/uaa/token/genJwtToken





#公钥路径
jwt.pub-key=key/pub.key
#token命名
jwt.token-header=authorization


client.token-header=client-token
client.id=oauth-server
client.secret=123456
#D:\log  /var/log/userlog
customLog.path=/var/log/userlog

##验证权限API开关量
# true 的时候，
# 效验当前用户的API权限
# false的时候不效验用户的API权限
api.validation=false

#前端查询接口需要访问的方法
font.perimission.url=/meta/api/metadatas/records







#设置ribbon的负载均衡
#ribbon.eureka.enabled=false

#zull ribbon的配置
#hello-service.ribbon.listOfServers=http://192.168.101.82:8084/,http://192.168.101.82:8083/


#outh认证，这是配置认证服务器的地址
#security.oauth2.client.access-token-uri=http://192.168.101.82:8085/uaa/oauth/token

#用户认证地址
#security.oauth2.client.user-authorization-uri=http://192.168.101.82:8085/uaa/oauth/authorize
#用户客户端
#security.oauth2.client.client-id=webapp

#用户信息
#security.oauth2.resource.user-info-uri=http://192.168.101.82:8085/uaa/user
#security.oauth2.resource.prefer-token-info=false

#spring session 的配置
spring.session.store-type=redis
# Session timeout. If a duration suffix is not specified, seconds will be used.
#Sessions flush mode.
spring.session.redis.flush-mode=on_save

